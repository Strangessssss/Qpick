

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../../globals.css";
import {Header} from "@/components/pages/header";
import {Footer} from "@/components/pages/footer";
import {DropdownMenuProvider} from "@/contexts/DropdownMenuContext";
import {UserContextProvider} from "@/contexts/UserContext";
import {ProductContextProvider} from "@/contexts/ProductContext";
import {BrandContextProvider} from "@/contexts/BrandContext";
import {CategoryContextProvider} from "@/contexts/CategoryContext";
import {Toaster} from "react-hot-toast";
import {notFound} from "next/navigation";
import {hasLocale, NextIntlClientProvider} from "next-intl";
import {routing} from "@/i18n/routing";
import {Suspense} from "react";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "QPick",
  description: "Generated by create next app",
};


export default async function RootLayout({
      children,
      params,
    }: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  const { locale } = await params;

  if (!hasLocale(routing.locales, locale)) notFound();

  const messages = (await import(`../../../../messages/${locale}.json`)).default;

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased min-h-screen flex flex-col`}
      >
      <Suspense fallback={<div>Loading translations...</div>}>
      <NextIntlClientProvider messages={messages} locale={locale}>
        <CategoryContextProvider>
          <BrandContextProvider>
            <ProductContextProvider>
              <DropdownMenuProvider>
                <UserContextProvider>
                  <Header/>
                  <div className="flex-1 flex">
                    {children}
                    <Toaster position="top-center" reverseOrder={false} />
                  </div>
                  <Footer/>
                </UserContextProvider>
              </DropdownMenuProvider>
            </ProductContextProvider>
          </BrandContextProvider>
        </CategoryContextProvider>
        </NextIntlClientProvider>
        </Suspense>
      </body>
    </html>
  );
}
